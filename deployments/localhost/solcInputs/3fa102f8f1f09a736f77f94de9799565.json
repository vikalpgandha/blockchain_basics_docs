{
  "language": "Solidity",
  "sources": {
    "contracts/SimpleStorage.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract SimpleStorage {\r\n    uint256 favoriteNumber;\r\n    \r\n    struct People {\r\n        uint256 favoriteNumber;\r\n        string name;\r\n    }\r\n\r\n    mapping(string => uint256) public nameToFavNum;\r\n\r\n    People[] public people;\r\n    \r\n    function addPerson(string memory _name, uint256 _favoriteNumber) public {\r\n        people.push(People(_favoriteNumber, _name));\r\n        nameToFavNum[_name] = _favoriteNumber;\r\n    }\r\n\r\n    function store(uint256 _favoriteNumber) public virtual {\r\n        favoriteNumber = _favoriteNumber;\r\n    }\r\n\r\n    function retrieve() public view returns(uint256){\r\n        return favoriteNumber;\r\n    }\r\n\r\n    function add() public pure returns(uint256){\r\n        return 555+1;\r\n    }\r\n}\r\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "viaIR": true,
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}